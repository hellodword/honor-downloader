#! /usr/bin/env bash

set -euo pipefail

# https://annas-archive.li/md5/7805f951d49303dd5c994156460f2b8c
# https://annas-archive.se/md5/52ef0ce3a331584dc27ab2e22d5743f9
# https://annas-archive.se/md5/c8acc9e8b9ccfb34f9630cab84c8060b not supported

usage() {
    cat <<EOF
Usage: $0 [options...] <url>
 -o, --output <file>    Write to specific file instead of auto-detecting the filename
EOF
    exit 1
}

if [ $# -eq 0 ]; then
    usage
fi

output_file=""
url=""

while [[ $# -gt 0 ]]; do
    case "$1" in
        -o|--output)
            shift
            output_file="$1"
            ;;
        -*)
            echo "Unknown option: $1"
            usage
            ;;
        *)
            url="$1"
            ;;
    esac
    shift
done

if [[ -z "$url" ]]; then
    echo "No URL provided."
    usage
fi

hostname="$(echo "$url" | awk -F[://] '{print $4}')"
if [[ -z "$hostname" ]]; then
    echo "No hostname found in the URL."
    exit 1
fi

html="$(curl -fsSL "$url")"

torrent="$(echo "$html" | tr '\n' ' ' | grep -oP '(?<=torrent <a href=")[^"<>]+(?=">)')"
if [[ -z "$torrent" ]]; then
    echo "No torrent found."
    exit 1
fi

torrent_url="https://$hostname$torrent"



if [[ -z "$output_file" ]]; then
    output_file="$(basename "$(echo "$html" | tr '\n' ' ' | grep -oP '<strong>Filepath:</strong>[^<>]+' | head -1 | awk '{$1=$1};1')")"
fi

filename="$(echo "$html" | tr '\n' ' ' | grep -oP '(?<=&nbsp;file&nbsp;“)[^“<>]+(?=”)')"
if [[ -z "$filename" ]]; then
    echo "No filename found."
    exit 1
fi

if [[ -z "$output_file" ]]; then
    output_file="$filename"
fi

tmpbase="$(mktemp -d)"

torrent_file="$tmpbase/foo.torrent"
if ! curl -fsSL --output "$torrent_file" "$torrent_url"; then
    echo "Failed to download torrent file."
    exit 1
fi

if ! rqbit --disable-dht-persistence download -r "$filename" --exit-on-finish -o "$tmpbase" "$torrent_file"; then
    echo "Failed to download the file from torrent."
    exit 1
fi

downloaded="$(find "$tmpbase" -type f -name "$filename")"
if [ ! -f "$downloaded" ]; then
    echo "couldn't find the downloaded file"
    exit 1
fi

mv "$downloaded" "$output_file"
rm -rf "$tmpbase"

echo "Download completed: $output_file"
